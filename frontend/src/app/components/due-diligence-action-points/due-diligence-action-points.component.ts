import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
import { MatSlideToggleModule } from '@angular/material/slide-toggle';
import { MatCheckboxModule } from '@angular/material/checkbox';
import { ToastrService } from 'ngx-toastr';
import { ErrorHandler } from '../../error/error.handler';

@Component({
  selector: 'app-due-diligence-action-points',
  templateUrl: './due-diligence-action-points.component.html',
  styleUrls: ['./due-diligence-action-points.component.scss']
})
export class dueDiligenceActionPointsComponent implements OnInit {
  
  initiateDueDiligenceForm: FormGroup;
  pageErrors: any = {};
  isError: boolean = false;
  isSuccess: boolean = false;
  errorMessage = '';
  search: boolean = true;
  isChecked: boolean = false;
  searchResults: boolean = false;
  status: string = "Inactive";
  selectedUnit: any;
  panelOpenState: boolean = false;

  autoGeneratedDetailsForm: FormGroup;
  administrativeDetailsForm: FormGroup;
  generalInformationForm: FormGroup;
  CGSDetailsForm: FormGroup;
  assessmentForm: FormGroup;
  recommendationsForm: FormGroup;

  constructor(private formBuilder: FormBuilder,
    private errorHandler: ErrorHandler, private slideToggle: MatSlideToggleModule,
    private toastr: ToastrService) {
  }

  ngOnInit(): void {
    this.initiateDueDiligenceForm = this.formBuilder.group({
      selectModuleA: [''],
      selectModuleB: [''],
      loanApplnNumber: [''],
      loanApplnDate: [''],
      cifNumberAvailability: [''],
      cifNumber: [''],
      applicantName: [''],
      selectCreditSector: [''],
      selectLoanAccNumber: [''],
      selectLoanScheme: [''],
      selectLoanVariant: [''],
      selecte2e: [''],
      assignBranchMaker: [''],
      assignBranchChecker: [''],
      comments: ['']
    });
    this.autoGeneratedDetailsForm = this.formBuilder.group({
      e2eNumber: [''],
      e2eDate: [''],
      e2eM3StartDate: [''],
      e2eM4StartDate: [''],
      e2eM4ReviewNumber: [''],
      e2eM4ReviewDate: [''],
      e2eM5ReleaseNumber: [''],
      e2eM5Date: [''],
      branchName: [''],
      branchIFSC: ['']
    });
    this.administrativeDetailsForm = this.formBuilder.group({
      assignBranchMaker: [''],
      assignBranchChecker: [''],
      assignAuditControllingAuthority: [''],
      assignLoanSanctioningAuthority: [''],
      M1Processing: [''],
      periodicReviews: ['']
    });
    this.generalInformationForm = this.formBuilder.group({
      cifNumberAvailability: [''],
      loanApplnNumber2: [''],
      loanApplnDate2: [''],
      cifNumberAvailability2: [''],
      selectCifNumber2: [''],
      applicantName2: [''],
      selectCreditSector2: [''],
      selectExistingLoanNumber: [''],
      selectLoanScheme2: [''],
      selectLoanVariant2: [''],
      selecte2eLoanAcc: [''],
      loanAccNumber: [''],
      acceptanceDate: [''],
      sanctionedLoanAmount: [''],
      sanctionedLoanAmountWords: [''],
      loanTenure2: [''],
      revisedLoanTenure2: [''],
      disbursementDate: [''],
      reviewSanctionDate: [''],
      presentStatus: [''],
      releaseSecurity: [''],
      releaseSecurityDate: [''],
      accountType: [''],
      borrowerType: [''],
      borrowerCategory: ['']
    });
    this.CGSDetailsForm = this.formBuilder.group({
      loanSecurity: [''],
      securityType: [''],
      movableSecurityTypesList: [''],
      comments2: ['']
    });
    this.assessmentForm = this.formBuilder.group({
      cifNumberAvailability: [''],
      loanSecurity: [''],
      securityType: [''],
      applicantAddress: [''],
      applicantDOB: [''],
      applicantCIBILScore: [''],
      applicantAadhar: [''],
      applicantPAN: [''],
      applicantKYC1: [''],
      applicantKYC2: [''],
      immovableProperty: [''],
      immovablePropertyAddress: [''],
      advocateName: [''],
      legalOpinionDate: [''],
      valuerName: [''],
      valuationDate: [''],
      asssessedValue: [''],
      constructionCost: [''],
      staffVisitDate: ['']
    });
    this.recommendationsForm = this.formBuilder.group({
      loanLimit: [''],
      ROI: [''],
      holidayPeriod: [''],
      repaymentTenure: [''],
      repaymentTenure2: [''],
      advanceClassification: [''],
      comments1: [''],
      comments2: [''],
      comments3: [''],
      comments4: [''],
      comments5: ['']
    });
  }
}